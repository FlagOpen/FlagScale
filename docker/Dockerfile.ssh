# NOTE:
#   1. This construction method is not secure and is only for internal development use. Do not leak the built image.
#   2. It is recommended to rebuild the image for different tasks each time to avoid environmental interference caused by the same key.

# Use ARG to define the base image
ARG BASE_IMAGE
FROM ${BASE_IMAGE}
ARG SSH_PORT=22

##############################################################################
# Install SSH
##############################################################################
RUN apt-get update && \
    apt-get install -y openssh-server openssh-client

##############################################################################
# The client validity of SSH daemon and uncomment port 22 and replace it with the specified port
##############################################################################
# Keep SSH client alive from server side
RUN echo "ClientAliveInterval 30" >> /etc/ssh/sshd_config \
    && cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak \
    && sed "0,/^#Port 22/s//Port ${SSH_PORT}/" /etc/ssh/sshd_config > /etc/ssh/sshd_config.tmp \
    && mv /etc/ssh/sshd_config.tmp /etc/ssh/sshd_config

##############################################################################
# SSH configuration (not secure, only for development purpose)
##############################################################################
# Create necessary directories and initialize SSH configuration
RUN mkdir -p /run/sshd && \
    ssh-keygen -t rsa -N "" -f /root/.ssh/id_rsa && \
    cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && \
    echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config

##############################################################################
# SSH configuration (not secure, only for development purpose)
##############################################################################
# Start the SSH service and keep the container running
# Start the SSH service using the service command
# && ensures that the next command runs only if the previous command succeeds
# tail -f /dev/null keeps the container running indefinitely
CMD service ssh start && tail -f /dev/null
