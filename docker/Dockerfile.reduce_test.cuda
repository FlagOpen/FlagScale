##############################################################################
# ================== Stage: Base with CUDA and Dependencies ==================
##############################################################################
FROM flagscale:cuda12.8.1-cudnn9.7.1-python3.12-torch2.7.0-time_2506261134 AS base
ARG CUDA_VERSION=12.8.1


##############################################################################
# ==================== Final Stage: Minimal Runtime Image ====================
##############################################################################
FROM nvcr.io/nvidia/cuda:${CUDA_VERSION}-devel-ubuntu22.04 AS final

ARG WORK_DIR=/workspace
ARG STAGE_DIR=/tmp
ENV TZ=Asia/Shanghai
ENV DEBIAN_FRONTEND noninteractive

##############################################################################
# Temporary Installation Directory
##############################################################################
RUN mkdir -p ${WORK_DIR} && \
    mkdir -p ${STAGE_DIR}

##############################################################################
# Install Basic Utilities
##############################################################################
RUN apt-get update && \
    apt-get install -y --no-install-recommends apt-utils && \
    echo "N" | apt-get install -y --no-install-recommends pkg-config && \
    apt-get install -y --no-install-recommends \
        autotools-dev \
        build-essential \
        ca-certificates ccache cmake curl \
        emacs \
        gcc git git-lfs g++ \
        htop \
        iftop iotop \
        libcairo2-dev libfontconfig-dev libibverbs1 libibverbs-dev libnuma-dev libx11-dev lsb-release \
        net-tools nfs-common ninja-build \
        openssh-server openssh-client \
        pdsh psmisc \
        rsync \
        screen software-properties-common sudo \
        tmux tzdata \
        unzip \
        vim \
        wget

##############################################################################
# Clear
##############################################################################
RUN apt-get clean && \
        rm -rf /var/lib/apt/lists/* && \
        rm -rf ${STAGE_DIR}/*

##############################################################################
# Copy necessary files from build stages
##############################################################################
# Migrating Python3.12
COPY --from=base /usr/bin/python3.12-config /usr/bin/python3.12-config
COPY --from=base /usr/bin/python3 /usr/bin/python3
# Migrating OPENMPI
COPY --from=base /usr/local/openmpi-4.1.6 /usr/local/openmpi-4.1.6
COPY --from=base /usr/local/mpi/bin/mpirun.real /usr/local/mpi/bin/mpirun.real
COPY --from=base /usr/local/mpi/bin/mpirun /usr/local/mpi/bin/mpirun
# Migrating Miniconda
COPY --from=base /root/miniconda3 /root/miniconda3
# Migrating cuDNN (NVIDIA CUDA Deep Neural Network library)
COPY --from=base /usr/local/cuda-12.8/include /usr/local/cuda-12.8/include
COPY --from=base /usr/local/cuda-12.8/lib64 /usr/local/cuda-12.8/lib64
COPY --from=base /root/.bashrc /root/.bashrc

RUN ln -sf /usr/bin/python3.12-config /usr/bin/python3-config && \
    ln -s /usr/bin/python3 /usr/bin/python && \
    # OPENMPI
    ln -s /usr/local/openmpi-4.1.6 /usr/local/mpi && \
    test -f /usr/local/mpi/bin/mpic++ && \
    # Miniconda
    ~/miniconda3/bin/conda init bash && \
    ~/miniconda3/bin/conda config --set auto_activate_base false && \
    ~/miniconda3/bin/conda config --set default_python 3.12
