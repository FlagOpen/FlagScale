diff --git a/megatron/energon/__init__.py b/megatron/energon/__init__.py
new file mode 100644
index 000000000..486f14ba8
--- /dev/null
+++ b/megatron/energon/__init__.py
@@ -0,0 +1,160 @@
+# Copyright (c) 2025, NVIDIA CORPORATION.
+# SPDX-License-Identifier: BSD-3-Clause
+
+from megatron.energon.flavors import (
+    BaseCoreDatasetFactory,
+    BaseWebdatasetFactory,
+    CaptioningSample,
+    CaptioningWebdataset,
+    CrudeSample,
+    CrudeWebdataset,
+    DefaultDecoderWebdatasetFactory,
+    DefaultGenericWebdatasetFactory,
+    ImageClassificationSample,
+    ImageClassificationWebdataset,
+    ImageSample,
+    ImageWebdataset,
+    InterleavedSample,
+    InterleavedWebdataset,
+    JoinedWebdatasetFactory,
+    MultiChoiceVQASample,
+    MultiChoiceVQAWebdataset,
+    OCRSample,
+    OCRWebdataset,
+    Sample,
+    SavableDataset,
+    SimilarityInterleavedSample,
+    SimilarityInterleavedWebdataset,
+    StandardWebdatasetFactory,
+    TextSample,
+    TextWebdataset,
+    VidQASample,
+    VidQAWebdataset,
+    VQAOCRWebdataset,
+    VQASample,
+    VQAWebdataset,
+)
+from megatron.energon.loader import get_loader, get_savable_loader
+from megatron.energon.metadataset import (
+    DatasetLoader,
+    DatasetLoaderInterface,
+    Metadataset,
+    MetadatasetV2,
+    load_dataset,
+    prepare_metadataset,
+)
+from megatron.energon.savable_loader import SavableDataLoader
+from megatron.energon.task_encoder import (
+    AugmentTaskEncoder,
+    Batch,
+    DefaultTaskEncoder,
+    TaskEncoder,
+    batch_list,
+    batch_pad_stack,
+    batch_stack,
+    generic_batch,
+    get_train_dataset,
+    get_val_dataset,
+    get_val_datasets,
+    stateless,
+)
+from megatron.energon.task_encoder.cooking import Cooker, basic_sample_keys
+from megatron.energon.worker import WorkerConfig
+from megatron.energon.wrappers import (
+    BatchDataset,
+    BlendDataset,
+    ConcatDataset,
+    EpochizeDataset,
+    FilterDataset,
+    GcDataset,
+    GroupBatchDataset,
+    IterMapDataset,
+    LimitDataset,
+    LogSampleDataset,
+    MapDataset,
+    MixBatchDataset,
+    PackingDataset,
+    RepeatDataset,
+    ShuffleBufferDataset,
+    SkipSample,
+    concat_pad,
+    generic_concat,
+    homogeneous_concat_mix,
+)
+
+__all__ = [
+    "AugmentTaskEncoder",
+    "BaseCoreDatasetFactory",
+    "BaseWebdatasetFactory",
+    "Batch",
+    "BatchDataset",
+    "BlendDataset",
+    "CaptioningSample",
+    "CaptioningWebdataset",
+    "ConcatDataset",
+    "Cooker",
+    "CrudeSample",
+    "CrudeWebdataset",
+    "DatasetLoader",
+    "DatasetLoaderInterface",
+    "DefaultDecoderWebdatasetFactory",
+    "DefaultGenericWebdatasetFactory",
+    "DefaultTaskEncoder",
+    "EpochizeDataset",
+    "FilterDataset",
+    "GcDataset",
+    "GroupBatchDataset",
+    "ImageClassificationSample",
+    "ImageClassificationWebdataset",
+    "ImageSample",
+    "ImageWebdataset",
+    "InterleavedSample",
+    "InterleavedWebdataset",
+    "IterMapDataset",
+    "LimitDataset",
+    "LogSampleDataset",
+    "MapDataset",
+    "JoinedWebdatasetFactory",
+    "Metadataset",
+    "MetadatasetV2",
+    "MixBatchDataset",
+    "MultiChoiceVQASample",
+    "MultiChoiceVQAWebdataset",
+    "OCRSample",
+    "OCRWebdataset",
+    "RepeatDataset",
+    "Sample",
+    "SavableDataLoader",
+    "SavableDataset",
+    "SimilarityInterleavedSample",
+    "SimilarityInterleavedWebdataset",
+    "ShuffleBufferDataset",
+    "SkipSample",
+    "StandardWebdatasetFactory",
+    "PackingDataset",
+    "TaskEncoder",
+    "TextSample",
+    "TextWebdataset",
+    "VidQASample",
+    "VidQAWebdataset",
+    "VQASample",
+    "VQAWebdataset",
+    "VQAOCRWebdataset",
+    "WorkerConfig",
+    "basic_sample_keys",
+    "batch_list",
+    "batch_pad_stack",
+    "batch_stack",
+    "concat_pad",
+    "generic_batch",
+    "generic_concat",
+    "get_loader",
+    "get_savable_loader",
+    "get_train_dataset",
+    "get_val_dataset",
+    "get_val_datasets",
+    "homogeneous_concat_mix",
+    "load_dataset",
+    "prepare_metadataset",
+    "stateless",
+]

