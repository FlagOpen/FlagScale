diff --git a/flagscale/runner/auto_tuner/prune/memory.py b/flagscale/runner/auto_tuner/prune/memory.py
index 258a6b3f..b9121741 100644
--- a/flagscale/runner/auto_tuner/prune/memory.py
+++ b/flagscale/runner/auto_tuner/prune/memory.py
@@ -5,9 +5,10 @@ logger = logging.getLogger("FlagScale-AutoTuner")
 
 def prune_by_memory_model(config, strategy, history=[]):
     if "memory_model" in strategy:
-        if strategy["memory_model"] > config.experiment.auto_tuner.memory_model.gpu_memory:
+        upper_bound = config.experiment.auto_tuner.memory_model.gpu_memory
+        if strategy["memory_model"] > upper_bound:
             logger.info(
-                f"The strategy {strategy} has been pruned by modeling memory {int(strategy['memory_model'])}MB."
+                f"The strategy {strategy} has been pruned by modeling memory {int(strategy['memory_model'])}MB (>{int(upper_bound)}MB)."
             )
             strategy["max_mem"] = "OOM"
             strategy["performance"] = None
@@ -18,12 +19,15 @@ def prune_by_memory_model(config, strategy, history=[]):
 
 def prune_by_memory_model_util(config, strategy, history=[]):
     if "memory_model" in strategy:
-        if (
-            strategy["memory_model"] > config.experiment.auto_tuner.memory_model.gpu_memory * 0.8
-            or strategy["memory_model"] < config.experiment.auto_tuner.memory_model.gpu_memory * 0.2
-        ):
+        lower_bound = (
+            config.experiment.auto_tuner.memory_model.gpu_memory * strategy["gpu_utilization"][0]
+        )
+        upper_bound = (
+            config.experiment.auto_tuner.memory_model.gpu_memory * strategy["gpu_utilization"][1]
+        )
+        if strategy["memory_model"] > upper_bound or strategy["memory_model"] < lower_bound:
             logger.info(
-                f"The strategy {strategy} has been pruned by modeling memory util and its memory is {int(strategy['memory_model'])}MB."
+                f"The strategy {strategy} has been pruned by modeling memory util and its memory is {int(strategy['memory_model'])}MB (>{int(upper_bound)}MB or <{int(lower_bound)}MB)."
             )
             strategy["max_mem"] = None
             strategy["performance"] = None

