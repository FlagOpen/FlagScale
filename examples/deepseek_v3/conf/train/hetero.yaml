system:
  no_shared_fs: ${experiment.runner.no_shared_fs}
  num_workers: 16
  tensor_model_parallel_size: 2
  pipeline_model_parallel_size: 3
  expert_model_parallel_size: 2
  expert_tensor_parallel_size: 2
  context_parallel_size: 1
  disable_bias_linear: true
  reset_position_ids: True
  reset_attention_mask: True
  add_qkv_bias: true
  qk_layernorm: true
  sequence_parallel: true
  use_distributed_optimizer: true
  overlap_grad_reduce: true
  overlap_param_gather: true
  precision:
    bf16: true
    initial_loss_scale: 522893
    min_loss_scale: 1.0
    attention_softmax_in_fp32: true
    accumulate_allreduce_grads_in_fp32: true
  logging:
    log_interval: 1
    tensorboard_log_interval: 1
    wandb_project: ${experiment.exp_name}
    wandb_exp_name: ${experiment.exp_name}
    log_timers_to_tensorboard: true
    log_validation_ppl_to_tensorboard: true
    log_throughput: true
    log_params_norm: true
    log_num_zeros_in_grad: true
    log_memory_to_tensorboard: true
  checkpoint:
    save_interval: ${experiment.save_steps}
    load: ${experiment.load}
    ckpt_format: ${experiment.ckpt_format}

  hetero:
    enable_hetero: true
    hetero_pipeline_layer_split: [11, 6, 7]
    hetero_process_meshes: [1,1,2,4,1, 1,1,2,2,1, 1,1,2,2,1]
    expert_tensor_parallel_size_per_process_mesh: [1, 1, 1]
    use_partial_reduce_for_shared_embedding: True
    hetero_device_types: ["A800", "A800", "A800"]
    standalone_embedding_stage: False
    hetero_current_device_type: "A800"

model:
  transformer_impl: transformer_engine
  num_layers: 24
  hidden_size: 2048
  ffn_hidden_size: 1408
  num_attention_heads: 16
  group_query_attention: true
  num_query_groups: 16 # num_key_value_heads
  seq_length: 4096
  max_position_embeddings: 4096
  norm_epsilon: 1e-6
  use_rotary_position_embeddings: true
  rotary_base: 10000
  norm_init_weight: 0.5
  swiglu: true
  normalization: RMSNorm
  init_method_std: 0.02
  attention_dropout: 0.0
  hidden_dropout: 0.0
  position_embedding_type: rope
  untie_embeddings_and_output_weights: true
  no_position_embedding: true
  no_rope_fusion: true

  # mla args ==================
  multi_latent_attention: true
  q_lora_rank: 1536
  kv_lora_rank: 512
  qk_head_dim: 128
  qk_pos_emb_head_dim: 64
  v_head_dim: 128

  # moe args ===================
  moe_shared_expert_intermediate_size: 1408
  num_experts: 64
  moe_router_load_balancing_type: "aux_loss"
  moe_router_score_function: sigmoid
  moe_router_enable_expert_bias: true
  moe_router_bias_update_rate: 0.001
  moe_aux_loss_coeff: 0.02
  moe_layer_freq: "[0]+[1]*23"
  # node limited routing
  moe_router_num_groups: 1
  moe_router_group_topk: 1
  moe_router_topk: 6

  # mtp args ===================
  mtp_num_layers: 1

  # training
  seed: ${experiment.seed}
  train_iters: 10000
  micro_batch_size: 1
  global_batch_size: 16
  eval_interval: 10000
  eval_iters: 1000

  # optimizer
  no_load_optim: True
  no_load_rng: True
  optimizer: adam
  lr: 0.0005
  min_lr: 0.00005
  weight_decay: 0.1
  adam_beta1: 0.9
  adam_beta2: 0.95
  adam_eps: 1.0e-6
  clip_grad: 1.0
  lr_warmup_fraction: 0.02
  lr_decay_iters: 120000
  lr_decay_style: cosine

data:
  no_create_attention_mask_in_dataloader: true
  data_path:  ${your_data_path:??}
  split: 1
  tokenizer:
    tokenizer_type: AquilaTokenizerFS
    vocab_file: ./examples/aquila/tokenizer/vocab.json
    merge_file: ./examples/aquila/tokenizer/merges.txt
    special_tokens_file: ./examples/aquila/tokenizer/special_tokens.txt
    vocab_size: 100008
    make_vocab_size_divisible_by: 64
