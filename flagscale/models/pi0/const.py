import numpy as np

# 1. 构建顶层字典，逐个定义每个键对应的统计信息子字典
stats_dict = {}

# -------------------------- 'task_index' 统计 --------------------------
stats_dict['task_index'] = {
    'min': np.array([0]),  # int类型数组
    'max': np.array([0]),
    'mean': np.array([0.]),  # float类型数组
    'std': np.array([0.]),
    'count': np.array([127500])
}

# -------------------------- 'observation.images.cam_right_wrist' 统计 --------------------------
stats_dict['observation.images.cam_right_wrist'] = {
    'min': np.array([[[0.]], [[0.]], [[0.]]]),  # shape=(3,1,1)的float数组
    'max': np.array([[[1.]], [[1.]], [[1.]]]),
    'mean': np.array([[[0.45818094]], [[0.46308139]], [[0.46801325]]]),
    'std': np.array([[[0.25870578]], [[0.25938543]], [[0.26556231]]]),
    'count': np.array([20485])
}

# -------------------------- 'timestamp' 统计 --------------------------
stats_dict['timestamp'] = {
    'min': np.array([0.]),
    'max': np.array([29.97999954]),
    'mean': np.array([14.98999977]),
    'std': np.array([8.66025257]),
    'count': np.array([127500])
}

# -------------------------- 'frame_index' 统计 --------------------------
stats_dict['frame_index'] = {
    'min': np.array([0]),
    'max': np.array([1499]),
    'mean': np.array([749.5]),
    'std': np.array([433.01260567]),
    'count': np.array([127500])
}

# -------------------------- 'episode_index' 统计 --------------------------
stats_dict['episode_index'] = {
    'min': np.array([0]),
    'max': np.array([84]),
    'mean': np.array([42.]),
    'std': np.array([24.53568829]),
    'count': np.array([127500])
}

# -------------------------- 'next.done' 统计（bool类型数组） --------------------------
stats_dict['next.done'] = {
    'min': np.array([False]),  # bool类型
    'max': np.array([True]),
    'mean': np.array([0.00066667]),  # 布尔值的均值（概率）
    'std': np.array([0.02581128]),
    'count': np.array([127500])
}

# -------------------------- 'observation.images.cam_high' 统计 --------------------------
stats_dict['observation.images.cam_high'] = {
    'min': np.array([[[0.]], [[0.]], [[0.]]]),
    'max': np.array([[[1.]], [[1.]], [[1.]]]),
    'mean': np.array([[[0.52806522]], [[0.53120597]], [[0.52385944]]]),
    'std': np.array([[[0.25333996]], [[0.25805901]], [[0.2761251]]]),
    'count': np.array([20485])
}

# -------------------------- 'index' 统计 --------------------------
stats_dict['index'] = {
    'min': np.array([0]),
    'max': np.array([127499]),
    'mean': np.array([63749.5]),
    'std': np.array([36806.07965971]),
    'count': np.array([127500])
}

# -------------------------- 'observation.effort' 统计（14维数组） --------------------------
stats_dict['observation.effort'] = {
    'min': np.array([-4807.03027344, -2571.64013672, -2224.63012695, -957.64001465,
                     -1716.22009277, -1016.82000732, -1180.91003418, -5471.45996094,
                     -2423.68994141, -2345.67993164, -2235.39013672, -1412.25,
                     -1186.29003906, -1164.77001953]),
    'max': np.array([4217.91992188, 852.7300415, 833.90002441, 2474.80004883,
                     2337.61010742, 1452.59997559, 1006.05999756, 5304.68017578,
                     1775.40002441, 965.71002197, 903.84002686, 2200.42016602,
                     1156.70007324, 971.09002686]),
    'mean': np.array([-214.03159926, -446.19281868, -412.08388708, 65.29165727,
                      -121.19907379, 29.82499398, -131.39754156, 199.97320174,
                      -405.98561491, -406.93457642, -61.80128496, -126.4907525,
                      -6.92804122, -154.02957759]),
    'std': np.array([695.75460466, 403.86863156, 287.82851764, 182.06041191,
                     185.93945954, 172.67005308, 273.93786345, 682.06478914,
                     405.78469497, 320.64415131, 188.74933705, 195.92404174,
                     124.8158439, 259.67476378]),
    'count': np.array([127500])
}

# -------------------------- 'observation.state' 统计（14维数组） --------------------------
stats_dict['observation.state'] = {
    'min': np.array([-1.21031082, -1.17196131, -0.58444667, -1.01702929, -1.77788377,
                     -2.00491285, -0.0201416, -0.62126225, -1.31768954, -0.52922338,
                     -1.25633025, -1.84077704, -1.15048563, -0.00376501]),
    'max': np.array([0.66267973, 1.12287402, 1.5493207, 0.96487397, 0.7946021,
                     0.78846616, 0.99999893, 0.91118461, 1.19497108, 1.55852449,
                     1.25019443, 1.07378662, 2.36233044, 0.99999994]),
    'mean': np.array([-0.3287205, -0.12740239, 0.67699913, -0.16848615, -0.53459921,
                      -0.28537365, 0.32399017, 0.30145053, -0.18820305, 0.68296882,
                      0.0149194, -0.41443538, 0.42349385, 0.34458554]),
    'std': np.array([0.26855406, 0.52187841, 0.34527542, 0.33434345, 0.56570501,
                     0.60700164, 0.40827002, 0.24999769, 0.52619014, 0.32769682,
                     0.47363225, 0.63223937, 0.71495124, 0.40501176]),
    'count': np.array([127500])
}

# -------------------------- 'observation.images.cam_left_wrist' 统计 --------------------------
stats_dict['observation.images.cam_left_wrist'] = {
    'min': np.array([[[0.]], [[0.]], [[0.]]]),
    'max': np.array([[[1.]], [[1.]], [[1.]]]),
    'mean': np.array([[[0.45789148]], [[0.45640719]], [[0.46864741]]]),
    'std': np.array([[[0.25672628]], [[0.25669866]], [[0.26806588]]]),
    'count': np.array([20485])
}

# -------------------------- 'action' 统计（14维数组） --------------------------
stats_dict['action'] = {
    'min': np.array([-1.29928172, -1.17349529, -0.61205834, -0.9909516, -1.79322362,
                     -2.00644684, -0.22263889, -0.61972827, -1.31462157, -0.55683506,
                     -1.25633025, -1.8346411, -1.13821375, -0.16488899]),
    'max': np.array([0.66728169, 1.10139823, 1.54318476, 0.96487397, 0.79153413,
                     0.80073798, 1.1380924, 0.90965062, 1.19497108, 1.55238855,
                     1.27473807, 1.08605838, 2.36386442, 1.14711583]),
    'mean': np.array([-0.33782541, -0.14234323, 0.65857972, -0.16608326, -0.53945635,
                      -0.28222263, 0.285523, 0.31063033, -0.20207678, 0.66402019,
                      0.01102536, -0.41856827, 0.42368696, 0.32151099]),
    'std': np.array([0.27102661, 0.51175402, 0.34679798, 0.33377273, 0.5668194,
                     0.60367658, 0.41538015, 0.25203775, 0.5153601, 0.32931866,
                     0.47444776, 0.63568487, 0.71369528, 0.40890547]),
    'count': np.array([127500])
}


if __name__ == "__main__":
    # -------------------------- 验证（可选）：打印部分关键信息确认正确性 --------------------------
    print("=== 验证生成的字典 ===")
    # 检查'observation.images.cam_right_wrist'的mean数组形状和值
    print("1. 'observation.images.cam_right_wrist' mean shape:", stats_dict['observation.images.cam_right_wrist']['mean'].shape)
    print("   对应值:", stats_dict['observation.images.cam_right_wrist']['mean'])

    # 检查'action'的min数组（14维）
    print("\n2. 'action' min array (前5个元素):", stats_dict['action']['min'][:5])

    # 检查'next.done'的bool类型
    print("\n3. 'next.done' min type:", stats_dict['next.done']['min'].dtype)
    print("   'next.done' mean value:", stats_dict['next.done']['mean'][0])