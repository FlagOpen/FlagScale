diff --git a/vllm/model_executor/sampling_metadata.py b/vllm/model_executor/sampling_metadata.py
index 56f0f0984..646b1283b 100644
--- a/vllm/model_executor/sampling_metadata.py
+++ b/vllm/model_executor/sampling_metadata.py
@@ -49,6 +49,12 @@ class SequenceGroupToSample:
     # Sample token indices from logits. Empty if sampling is not required.
     sample_indices: list[int]
 
+    # --- FLAGSCALE MODIFICATION BEG ---
+    negative_seq_data: Optional[dict[int, SequenceData]] = None
+    negative_seq_len: Optional[int] = None
+    negative_query_len: Optional[int] = None
+    # --- FLAGSCALE MODIFICATION END ---
+
     @property
     def do_sample(self):
         return len(self.sample_indices) > 0
@@ -250,6 +256,7 @@ def _prepare_seq_groups(
 
     for i, seq_group_metadata in enumerate(seq_group_metadata_list):
         seq_ids = seq_group_metadata.seq_data.keys()
+        has_negative = seq_group_metadata.negative_seq_data is not None # --- FLAGSCALE MODIFICATION ---
 
         if cache is not None:
             sample_obj = cache.get_cached_seq_group_to_sample(len(seq_ids))
@@ -266,6 +273,10 @@ def _prepare_seq_groups(
         # If the current seq group is in decode stage, it is None.
         seq_len: Optional[int] = None
         query_len: Optional[int] = None
+        # --- FLAGSCALE MODIFICATION BEG ---
+        negative_seq_len: Optional[int] = None
+        negative_query_len: Optional[int] = None
+        # --- FLAGSCALE MODIFICATION END ---
         prompt_logprob_indices: list[int] = (sample_obj.prompt_logprob_indices
                                              if cache is not None else [])
         sample_indices: list[int] = (sample_obj.sample_indices
@@ -283,18 +294,48 @@ def _prepare_seq_groups(
             num_prefill_sample = len(seq_ids)
             assert num_prefill_sample == 1
             assert query_lens is not None and seq_lens is not None
-            query_len, seq_len = query_lens[i], seq_lens[i]
-            # If we need sampling, exclude num_prefill_sample tokens from
-            # prompt logprob.
-            prompt_logprob_len = (query_len - num_prefill_sample
-                                  if do_sample else query_len)
-            sample_len = num_prefill_sample if do_sample else 0
+            # --- FLAGSCALE MODIFICATION BEG ---
+            if has_negative:
+                positive_query_lens, positive_seq_lens = query_lens[::2], seq_lens[::2]
+                negative_query_lens, negative_seq_lens = query_lens[1::2], seq_lens[1::2]
+
+                query_len, seq_len = positive_query_lens[i], positive_seq_lens[i]
+                prompt_logprob_len = (query_len - num_prefill_sample
+                                    if do_sample else query_len)
+                sample_len = num_prefill_sample if do_sample else 0
+
+                negative_query_len, negative_seq_len = negative_query_lens[i], negative_seq_lens[i]
+                negative_prompt_logprob_len = (negative_query_len - num_prefill_sample
+                                               if do_sample else negative_query_len)
+                negative_sample_len = num_prefill_sample if do_sample else 0
+            # --- FLAGSCALE MODIFICATION END ---
+            else:
+                query_len, seq_len = query_lens[i], seq_lens[i]
+                # If we need sampling, exclude num_prefill_sample tokens from
+                # prompt logprob.
+                prompt_logprob_len = (query_len - num_prefill_sample
+                                      if do_sample else query_len)
+                sample_len = num_prefill_sample if do_sample else 0
         else:
             # Decode
-            prompt_logprob_len = 0
-            query_len = query_lens[i] if query_lens is not None and len(
-                query_lens) > 0 else 1
-            sample_len = len(seq_ids) * query_len if do_sample else 0
+            # --- FLAGSCALE MODIFICATION BEG ---
+            if has_negative:
+                # positive
+                prompt_logprob_len = 0
+                query_len = query_lens[::2][i] if query_lens is not None and len(
+                    query_lens[::2]) > 0 else 1
+                sample_len = len(seq_ids) * query_len if do_sample else 0
+                # negative
+                negative_prompt_logprob_len = 0
+                negative_query_len = query_lens[1::2][i] if query_lens is not None and len(
+                    query_lens[1::2]) > 0 else 1
+                negative_sample_len = len(seq_ids) * negative_query_len if do_sample else 0
+            # --- FLAGSCALE MODIFICATION END ---
+            else:
+                prompt_logprob_len = 0
+                query_len = query_lens[i] if query_lens is not None and len(
+                    query_lens) > 0 else 1
+                sample_len = len(seq_ids) * query_len if do_sample else 0
 
             if sampling_params.seed is not None and generators is not None:
                 generator = generators.get(seq_group_metadata.request_id)
@@ -317,6 +358,19 @@ def _prepare_seq_groups(
                 range(model_output_idx, model_output_idx + sample_len))
         model_output_idx += sample_len
 
+        # --- FLAGSCALE MODIFICATION BEG ---
+        if sampling_params.prompt_logprobs is not None and has_negative:
+            selected_token_indices.extend(
+                range(model_output_idx, model_output_idx + negative_prompt_logprob_len))
+        if has_negative:
+            model_output_idx += negative_prompt_logprob_len
+        if do_sample and has_negative:
+            selected_token_indices.extend(
+                range(model_output_idx, model_output_idx + negative_sample_len))
+        if has_negative:
+            model_output_idx += negative_sample_len
+        # --- FLAGSCALE MODIFICATION END ---
+
         # We now find indices for logprob computation and sampling.
         """
         This block computes categorized_sample_indices which is used in the
@@ -347,6 +401,12 @@ def _prepare_seq_groups(
             sample_obj.query_len = query_len
             sample_obj.generator = generator
             sample_obj.is_prompt = is_prompt
+            # --- FLAGSCALE MODIFICATION BEG ---
+            if has_negative:
+                sample_obj.negative_seq_data = seq_group_metadata.negative_seq_data
+                sample_obj.negative_seq_len = negative_seq_len
+                sample_obj.negative_query_len = negative_query_len
+            # --- FLAGSCALE MODIFICATION END ---
         else:
             sample_obj = SequenceGroupToSample(
                 seq_ids=list(seq_ids),
@@ -358,6 +418,11 @@ def _prepare_seq_groups(
                 is_prompt=is_prompt,
                 prompt_logprob_indices=list(prompt_logprob_indices),
                 sample_indices=list(sample_indices),
+                # --- FLAGSCALE MODIFICATION BEG ---
+                negative_seq_data=seq_group_metadata.negative_seq_data if has_negative else None,
+                negative_seq_len=negative_seq_len if has_negative else None,
+                negative_query_len=negative_query_len if has_negative else None,
+                # --- FLAGSCALE MODIFICATION END ---
             )
 
         seq_groups.append(sample_obj)
